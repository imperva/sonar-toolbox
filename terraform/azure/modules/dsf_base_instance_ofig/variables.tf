variable "name" {
  type = string
  default = "octo-dsf"
}

variable "location" {
  type = string
  default = "East US"
}

variable "azurerm_resource_group_name" {
  type = string
  default = "octo-isbt"
}

variable "subnet_id" {
  type = string
  description = "Subnet id for the vm image"
  default = "admin"
}

variable "admin_username" {
  type = string
  description = "Username of the admin user to access to the dsf instance OS via ssh."
  default = "azureuser"
}

variable "azurerm_ssh_public_key_name" {
  type = string
  description = "Name of azure ssh key used to access the DSF VM instances."
  default = "az-isbt-octo-dev"
}

variable "amd_disk_size" {
  type = number
  validation {
    condition     = var.amd_disk_size >= 100
    error_message = "DSF base instance disk size must be at least 100GB."
  }
  default = 100
}

variable "az_storage_account_name" {
  type = string
  description = "Name of the storage account where the install tar package is hosted."
  default = "octoteamstorage"
}

variable "dsf_install_tarball_path" {
  type = string
  description = "Installation tarball path." 
  default = "jsonar-4.9.openapi4_20220913183535.tar.gz"
}

variable "dsf_version" { 
  type = string
  description = "Name of the version seen in the os path of after running sonargd-setup." 
  default = "4.9.openapi4" #4.9.servicenow
} 

variable "security_group_ingress_cidrs" { 
    type = list
    description = "List of allowed ingress cidr patterns for the DSF agentless gw instance"
    default = ["75.80.37.59/32", "134.238.194.108/32", "10.0.0.0/16"] 
}




variable "admin_password" {
  type = string
  sensitive = true
  description = "Admin password"
  validation {
    condition = length(var.admin_password) > 8
    error_message = "Admin password must be at least 8 characters."
  }
  default = "Imperva123#"
}

variable "secadmin_password" {
  type = string
  sensitive = true
  description = "Admin password"
  validation {
    condition = length(var.secadmin_password) > 8
    error_message = "Admin password must be at least 8 characters."
  }
  default = "Imperva123#"
}

variable "sonarg_pasword" {
  type = string
  sensitive = true
  description = "Admin password"
  validation {
    condition = length(var.sonarg_pasword) > 8
    error_message = "Admin password must be at least 8 characters."
  }
  default = "Imperva123#"
}

variable "sonargd_pasword" {
  type = string
  sensitive = true
  description = "Admin password"
  validation {
    condition = length(var.sonargd_pasword) > 8
    error_message = "Admin password must be at least 8 characters."
  }
  default = "Imperva123#"
}


# variable "ec2_instance_type" {
#   type = string
#   description = "Ec2 instance type for the DSF base instance"
# }

# variable "aws_ami_name" {
#   type = string
#   description = "Name of the base AMI to use when deploying the dsf instnace."
# }


# variable "ec2_user_data" {
#   type = string
# }

# variable "key_pair" {
#   type = string
#   description = "key pair for DSF base instance. This key must be generated by by the hub module and present on the local disk."
# }

# variable "security_group_ingress_cidrs" {
#   type = list
#   description = "List of allowed ingress cidr patterns for the DSF base instance"
# }

# variable "dsf_iam_profile_name" {
#   type = string
#   default = null
#   description = "DSF base ec2 IAM instance profile"
# }

# variable "dsf_base_amis_id" {
#   type = map(any)
#   default = {
#     us-east-1 = "ami-064196ba51ee65773"
#     eu-west-2 = "ami-03a6c38b3c0aa74f9"
#   }
# }
